package com.raulvintila.app.lieflashcards.Database.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBUserDaoConfig;
    private final DaoConfig dBUserDeckDaoConfig;
    private final DaoConfig dBDeckDaoConfig;
    private final DaoConfig dBVoteDaoConfig;
    private final DaoConfig dBCardDaoConfig;
    private final DaoConfig dBCardContentDaoConfig;
    private final DaoConfig dBCardProgressDaoConfig;

    private final DBUserDao dBUserDao;
    private final DBUserDeckDao dBUserDeckDao;
    private final DBDeckDao dBDeckDao;
    private final DBVoteDao dBVoteDao;
    private final DBCardDao dBCardDao;
    private final DBCardContentDao dBCardContentDao;
    private final DBCardProgressDao dBCardProgressDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBUserDaoConfig = daoConfigMap.get(DBUserDao.class).clone();
        dBUserDaoConfig.initIdentityScope(type);

        dBUserDeckDaoConfig = daoConfigMap.get(DBUserDeckDao.class).clone();
        dBUserDeckDaoConfig.initIdentityScope(type);

        dBDeckDaoConfig = daoConfigMap.get(DBDeckDao.class).clone();
        dBDeckDaoConfig.initIdentityScope(type);

        dBVoteDaoConfig = daoConfigMap.get(DBVoteDao.class).clone();
        dBVoteDaoConfig.initIdentityScope(type);

        dBCardDaoConfig = daoConfigMap.get(DBCardDao.class).clone();
        dBCardDaoConfig.initIdentityScope(type);

        dBCardContentDaoConfig = daoConfigMap.get(DBCardContentDao.class).clone();
        dBCardContentDaoConfig.initIdentityScope(type);

        dBCardProgressDaoConfig = daoConfigMap.get(DBCardProgressDao.class).clone();
        dBCardProgressDaoConfig.initIdentityScope(type);

        dBUserDao = new DBUserDao(dBUserDaoConfig, this);
        dBUserDeckDao = new DBUserDeckDao(dBUserDeckDaoConfig, this);
        dBDeckDao = new DBDeckDao(dBDeckDaoConfig, this);
        dBVoteDao = new DBVoteDao(dBVoteDaoConfig, this);
        dBCardDao = new DBCardDao(dBCardDaoConfig, this);
        dBCardContentDao = new DBCardContentDao(dBCardContentDaoConfig, this);
        dBCardProgressDao = new DBCardProgressDao(dBCardProgressDaoConfig, this);

        registerDao(DBUser.class, dBUserDao);
        registerDao(DBUserDeck.class, dBUserDeckDao);
        registerDao(DBDeck.class, dBDeckDao);
        registerDao(DBVote.class, dBVoteDao);
        registerDao(DBCard.class, dBCardDao);
        registerDao(DBCardContent.class, dBCardContentDao);
        registerDao(DBCardProgress.class, dBCardProgressDao);
    }
    
    public void clear() {
        dBUserDaoConfig.getIdentityScope().clear();
        dBUserDeckDaoConfig.getIdentityScope().clear();
        dBDeckDaoConfig.getIdentityScope().clear();
        dBVoteDaoConfig.getIdentityScope().clear();
        dBCardDaoConfig.getIdentityScope().clear();
        dBCardContentDaoConfig.getIdentityScope().clear();
        dBCardProgressDaoConfig.getIdentityScope().clear();
    }

    public DBUserDao getDBUserDao() {
        return dBUserDao;
    }

    public DBUserDeckDao getDBUserDeckDao() {
        return dBUserDeckDao;
    }

    public DBDeckDao getDBDeckDao() {
        return dBDeckDao;
    }

    public DBVoteDao getDBVoteDao() {
        return dBVoteDao;
    }

    public DBCardDao getDBCardDao() {
        return dBCardDao;
    }

    public DBCardContentDao getDBCardContentDao() {
        return dBCardContentDao;
    }

    public DBCardProgressDao getDBCardProgressDao() {
        return dBCardProgressDao;
    }

}
